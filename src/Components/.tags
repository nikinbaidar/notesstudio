!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!JavaScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!JavaScript	G,getter	/getters/
!_TAG_KIND_DESCRIPTION!JavaScript	M,field	/fields/
!_TAG_KIND_DESCRIPTION!JavaScript	S,setter	/setters/
!_TAG_KIND_DESCRIPTION!JavaScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!JavaScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!JavaScript	g,generator	/generators/
!_TAG_KIND_DESCRIPTION!JavaScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!JavaScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!JavaScript	v,variable	/global variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!JavaScript	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/nikin/repos/notesstudio/src/Components/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
Advertisements	./Ads.js	/^class Advertisements extends React.Component {$/;"	c
Copyright	./Copyright.js	/^class Copyright extends React.Component {$/;"	c
Navigation	./NavigationBar.js	/^class Navigation extends React.Component {$/;"	c
Quiz	./Main.js	/^export class Quiz extends React.Component {$/;"	c
SEO	./seo.js	/^export function SEO({title, description, name, type}) {$/;"	c
Semesters	./Main.js	/^export class Semesters extends React.Component {$/;"	c
Sidebar	./Sidebar.js	/^class Sidebar extends React.Component {$/;"	c
allForms	./Main.js	/^        const allForms = document.getElementsByClassName("optionGroup");$/;"	C	class:Quiz
anonymousObject4aff85870205	./Sidebar.js	/^                        <NavLink to={lesson.path} style={({ isActive }) => ({$/;"	v	variable:Sidebar.render.elem
choice	./Main.js	/^                        id={choice}$/;"	M
choice	./Main.js	/^                        value={choice}$/;"	M
choiceId	./Main.js	/^                        <li key={choiceId} className={className}>$/;"	M
componentDidMount	./Main.js	/^    componentDidMount() {$/;"	m	class:Quiz
componentWillUnmount	./Main.js	/^    componentWillUnmount() {$/;"	m	class:Quiz
constructor	./Main.js	/^    constructor(props) {$/;"	m	class:Quiz
correctValues	./Main.js	/^        this.correctValues = [];$/;"	p	method:Quiz.constructor
cross	./Main.js	/^        const tick = `&#x2714;`; const cross = `&#x2716;`;$/;"	C	class:Quiz
currentSemester	./Main.js	/^        let currentSemester = event.target.value;$/;"	v	class:Semesters
elem	./Main.js	/^                <React.Fragment key={elem.id}>$/;"	M
elem	./Main.js	/^            const elem = {$/;"	v	method:Quiz.render
elem	./Main.js	/^        const elem = {$/;"	v
elem	./Main.js	/^        return <option key={elem.id} value={index}>{elem.label}<\/option>;$/;"	M
elem	./NavigationBar.js	/^        const elem = {$/;"	v
elem	./NavigationBar.js	/^        return <li className={elem.class} key={elem.id}>{elem.label}<\/li>;$/;"	M
elem	./Sidebar.js	/^                <React.Fragment key={elem.id}>$/;"	M
elem	./Sidebar.js	/^            const elem = {$/;"	v	method:Sidebar.render
gridItems	./Main.js	/^        let gridItems = document.querySelectorAll('.options p'); $/;"	v	class:Semesters
handleClick	./Main.js	/^    handleClick = (event) => {$/;"	M	class:Semesters
handleClick	./NavigationBar.js	/^    handleClick(event) {$/;"	m	class:Navigation
handleSelection	./Main.js	/^    handleSelection = (event) => {$/;"	M	class:Semesters
id	./Main.js	/^                id: crypto.randomUUID(),$/;"	p	variable:Quiz.render.elem
id	./Main.js	/^            id: crypto.randomUUID(),$/;"	p	variable:elem
id	./Main.js	/^            id: crypto.randomUUID(),$/;"	p	variable:props
id	./NavigationBar.js	/^            id: crypto.randomUUID(),$/;"	p	variable:elem
id	./Sidebar.js	/^                id: crypto.randomUUID(),$/;"	p	variable:Sidebar.render.elem
item	./Main.js	/^                        name={item.question} $/;"	M
label	./Main.js	/^            label: item,$/;"	p	variable:props
label	./Main.js	/^            label: item.semester$/;"	p	variable:elem
label	./NavigationBar.js	/^            label: item.name,$/;"	p	variable:elem
label	./Sidebar.js	/^                label: item.chapter,$/;"	p	variable:Sidebar.render.elem
lessonId	./Sidebar.js	/^                        <li key={lessonId}>$/;"	M
lessons	./Sidebar.js	/^                lessons: item.lessons.map((lesson) => {$/;"	p	variable:Sidebar.render.elem
name	./Main.js	/^        return subjects.map(({name}) => name);$/;"	M	variable:
navBar	./NavigationBar.js	/^    navBar = loadNavigationBar().map((item, index) => {$/;"	M	class:Navigation
options	./Main.js	/^                options: item.options.map((choice) => {$/;"	p	variable:Quiz.render.elem
props	./Main.js	/^        const props = {$/;"	v
question	./Main.js	/^                question: item.question,$/;"	p	variable:Quiz.render.elem
render	./Ads.js	/^    render() {$/;"	m	class:Advertisements
render	./Copyright.js	/^    render() {$/;"	m	class:Copyright
render	./Main.js	/^    render() {$/;"	m	class:Quiz
render	./NavigationBar.js	/^    render() {$/;"	m	class:Navigation
render	./Sidebar.js	/^    render() {$/;"	m	class:Sidebar
selected	./Main.js	/^            const selected = allForms[i].querySelector($/;"	C	class:Quiz
semester	./Main.js	/^    semesterSubjects = loadCurriculum().map(({semester, subjects}) => {$/;"	M	variable:
semesterSubjects	./Main.js	/^    semesterSubjects = loadCurriculum().map(({semester, subjects}) => {$/;"	M	class:Semesters
semesters	./Main.js	/^    semesters = loadCurriculum().map((item, index) => {$/;"	M	class:Semesters
subjectsGrid	./Main.js	/^    subjectsGrid = this.semesterSubjects[0].map((item, index) => {$/;"	M	class:Semesters
submitAllForms	./Main.js	/^    submitAllForms = () => {$/;"	M	class:Quiz
textDecoration	./Sidebar.js	/^                        textDecoration: isActive ? 'underline' : 'none' })}>$/;"	p	variable:Sidebar.render.elem.anonymousObject4aff85870205
tick	./Main.js	/^        const tick = `&#x2714;`; const cross = `&#x2716;`;$/;"	C	class:Quiz
title	./seo.js	/^export function SEO({title, description, name, type}) {$/;"	M	variable:
